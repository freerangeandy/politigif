{"version":3,"sources":["ImageEncoder.js"],"names":[],"mappings":"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","file":"ImageEncoder.js","sourcesContent":["import LZWEncoder from './LZWEncoder.js';\r\nimport NeuQuant from './NeuQuant.js';\r\nimport ByteArray from './ByteArray.js';\r\n\r\nexport function rgbaPixelsToRgbPixels(rgbaPixels) {\r\n\tconst pixelCount = rgbaPixels.length / 4;\r\n\tconst rgbPixels = new Uint8ClampedArray(pixelCount * 3);\r\n\r\n\tfor (let i = 0; i < pixelCount; i++) {\r\n\t\trgbPixels[i * 3 + 0] = rgbaPixels[i * 4 + 0];\r\n\t\trgbPixels[i * 3 + 1] = rgbaPixels[i * 4 + 1];\r\n\t\trgbPixels[i * 3 + 2] = rgbaPixels[i * 4 + 2];\r\n\t}\r\n\r\n\treturn rgbPixels;\r\n}\r\n\r\nexport function findClosestColorIndex(colorTable, color, usedEntry) {\r\n\tif (!colorTable) {\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tconst r = (color & 0xFF0000) >> 16;\r\n\tconst g = (color & 0x00FF00) >> 8;\r\n\tconst b = (color & 0x0000FF);\r\n\r\n\tvar minpos = 0;\r\n\tvar dmin = 256 * 256 * 256;\r\n\tvar len = colorTable.length;\r\n\r\n\tfor (var i = 0; i < len;) {\r\n\t\tvar dr = r - (colorTable[i++] & 0xff);\r\n\t\tvar dg = g - (colorTable[i++] & 0xff);\r\n\t\tvar db = b - (colorTable[i] & 0xff);\r\n\t\tvar d = dr * dr + dg * dg + db * db;\r\n\t\tvar index = i / 3;\r\n\t\tif (usedEntry[index] && (d < dmin)) {\r\n\t\t\tdmin = d;\r\n\t\t\tminpos = index;\r\n\t\t}\r\n\t\ti++;\r\n\t}\r\n\treturn minpos;\r\n}\r\n\r\nexport function analyzePixels(pixels, sample, usedEntry) {\r\n\tvar len = pixels.length;\r\n\tvar nPix = len / 3;\r\n\tconst indexedPixels = [];\r\n\tvar nq = new NeuQuant(pixels, len, sample);\r\n\r\n\t// initialize quantizer\r\n\tconst colorTab = nq.process(); // create reduced palette\r\n\r\n\t// map image pixels to new palette\r\n\tvar k = 0;\r\n\tfor (var j = 0; j < nPix; j++) {\r\n\t\tvar index = nq.map(pixels[k++] & 0xff, pixels[k++] & 0xff, pixels[k++] & 0xff);\r\n\t\tusedEntry[index] = true;\r\n\t\tindexedPixels[j] = index;\r\n\t}\r\n\r\n\treturn [colorTab, indexedPixels];\r\n}\r\n\r\nexport default class ImageEncoder {\r\n  constructor() {\r\n    this.usedEntry = [];\r\n  }\r\n\r\n  encodeImage(rgbaPixels, sample, width, height, transparentColor) {\r\n    // Remove alpha channel from pixel array\r\n    const rgbPixels = rgbaPixelsToRgbPixels(rgbaPixels);\r\n\r\n    // Analyze pixels\r\n    const [\r\n      localColorTable,\r\n      indexedPixels,\r\n    ] = analyzePixels(rgbPixels, sample, this.usedEntry);\r\n\r\n    // Encode the pixels\r\n    const tableBasedImageDataBytes = new ByteArray();\r\n    var lzwEncoder = new LZWEncoder(width, height, indexedPixels, 8);\r\n    lzwEncoder.encode(tableBasedImageDataBytes);\r\n\r\n    // Get closest match to the specified transparent color\r\n    let transparentColorIndex;\r\n    if (transparentColor !== undefined) {\r\n      transparentColorIndex = findClosestColorIndex(localColorTable, transparentColor, this.usedEntry);\r\n    }\r\n\r\n    return [\r\n      localColorTable,\r\n      transparentColorIndex,\r\n      tableBasedImageDataBytes.bytes,\r\n    ];\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}