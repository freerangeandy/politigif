{"version":3,"sources":["GifWriter.js"],"names":[],"mappings":"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","file":"GifWriter.js","sourcesContent":["import ByteArray from './ByteArray.js';\r\n\r\nexport default class GifWriter extends ByteArray {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\twriteShort(value) {\r\n\t\tthis.writeByte(value & 0xFF);\r\n\t\tthis.writeByte((value >> 8) & 0xFF);\r\n\t}\r\n\r\n\twriteHeader() {\r\n\t\t// Signature\r\n\t\tthis.writeUTFBytes('GIF');\r\n\r\n\t\t// Version\r\n\t\tthis.writeUTFBytes('89a');\r\n\t}\r\n\r\n\twriteLogicalScreenDescriptor(width, height, gctFlag, colorResolution, sortFlag, gctSize, backgroundColorIndex, pixelAspectRatio) {\r\n\t\tthis.writeShort(width); // Logical Screen Width\r\n\t\tthis.writeShort(height); // Logical Screen Height\r\n\r\n\t\t// Packed Fields\r\n\t\tthis.writeByte(\r\n\t\t\tgctFlag << 7 | // Global Color Table Flag (1 bit)\r\n\t\t\tcolorResolution << 4 | // Color Resolution (3 bits)\r\n\t\t\tsortFlag << 3 | // Sort Flag (1 bit)\r\n\t\t\tgctSize // Size of Global Color Table (3 bits)\r\n\t\t);\r\n\r\n\t\tthis.writeByte(backgroundColorIndex);\r\n\t\tthis.writeByte(pixelAspectRatio);\r\n\t}\r\n\r\n\twriteColorTable(colorTable) {\r\n\t\tthis.writeBytes(colorTable);\r\n\t\tvar n = (3 * 256) - colorTable.length;\r\n\t\tfor (var i = 0; i < n; i++) {\r\n\t\t\tthis.writeByte(0);\r\n\t\t}\r\n\t}\r\n\r\n\twriteGraphicControlExtension(disposalMethod, userInputFlag, transparentColorFlag, delayTime, transparentColorIndex) {\r\n\t\tthis.writeByte(0x21); // Extension Introducer\r\n\t\tthis.writeByte(0xF9); // Graphic Control Label\r\n\t\tthis.writeByte(4); // Block Size\r\n\r\n\t\t// Packed Fields\r\n\t\tthis.writeByte(\r\n\t\t\t0 << 5 | // Reserved (3 bits)\r\n\t\t\tdisposalMethod << 2 | // Disposal Method (3 bits)\r\n\t\t\tuserInputFlag << 1 | // User Input Flag (1 bit)\r\n\t\t\ttransparentColorFlag // Transparent Color Flag (1 bit)\r\n\t\t);\r\n\r\n\t\tthis.writeShort(delayTime); // Delay Time\r\n\t\tthis.writeByte(transparentColorIndex); // Transparent Color Index\r\n\r\n\t\tthis.writeByte(0); // Block Terminator\r\n\t}\r\n\r\n\twriteCommentExtension(comments) {\r\n\t\tthis.writeByte(0x21); // Extension Introducer\r\n\t\tthis.writeByte(0xFE); // Comment Label\r\n\r\n\t\t// Comment Data\r\n\t\tfor (const comment of comments) {\r\n\t\t\t// Data Sub-block\r\n\t\t\tthis.writeByte(comment.length); // Block Size\r\n\t\t\tthis.writeUTFBytes(comment); // Data Values\r\n\t\t}\r\n\r\n\t\tthis.writeByte(0); // Block Terminator\r\n\t}\r\n\r\n\twriteApplicationExtension(applicationIdentifier, applicationAuthenticationCode, dataBlocks) {\r\n\t\tthis.writeByte(0x21); // Extension Introducer\r\n\t\tthis.writeByte(0xFF); // Application Extension Label\r\n\t\tthis.writeByte(11); // Block Size\r\n\r\n\t\tthis.writeUTFBytes(applicationIdentifier); // Application Identifier (8 bytes)\r\n\t\tthis.writeUTFBytes(applicationAuthenticationCode); // Application Authentication Code (3 bytes)\r\n\r\n\t\t// Application Data\r\n\t\tfor (const dataBlock of dataBlocks) {\r\n\t\t\t// Data Sub-block\r\n\t\t\tthis.writeByte(dataBlock.length); // Block Size\r\n\t\t\tthis.writeBytes(dataBlock); // Data Values\r\n\t\t}\r\n\r\n\t\tthis.writeByte(0); // Block Terminator\r\n\t}\r\n\r\n\t// http://www.vurdalakov.net/misc/gif/netscape-looping-application-extension\r\n\twriteNetscapeLoopingApplicationExtension(loopCount) {\r\n\t\tconst dataBlock = [\r\n\t\t\t1, // Sub-block ID\r\n\t\t\tloopCount & 0xFF, (loopCount >> 8) & 0xFF, // Loop Count (2 bytes)\r\n\t\t];\r\n\r\n\t\tthis.writeApplicationExtension(\r\n\t\t\t'NETSCAPE',\r\n\t\t\t'2.0',\r\n\t\t\t[dataBlock]\r\n\t\t);\r\n\t}\r\n\r\n\twriteImageDescriptor(leftPosition, topPosition, width, height, lctFlag, interlaceFlag, sortFlag, lctSize) {\r\n\t\tthis.writeByte(0x2C); // Image Separator\r\n\t\tthis.writeShort(leftPosition); // Image Left Position\r\n\t\tthis.writeShort(topPosition); // Image Top Position\r\n\t\tthis.writeShort(width); // Image Width\r\n\t\tthis.writeShort(height); // Image Height\r\n\r\n\t\t// Packed Fields\r\n\t\tthis.writeByte(\r\n\t\t\tlctFlag << 7 | // Local Color Table Flag (1 bit)\r\n\t\t\tinterlaceFlag << 6 | // Interlace Flag (1 bit)\r\n\t\t\tsortFlag << 5 | // Sort Flag (1 bit)\r\n\t\t\t0 << 3 | // Reserved (2 bits)\r\n\t\t\tlctSize // Size of Local Color Table (3 bits)\r\n\t\t);\r\n\t}\r\n\r\n\twriteTrailer() {\r\n\t\tthis.writeByte(0x3B); // GIF Trailer\r\n\t}\r\n\r\n\twriteImage(left, top, width, height, disposalMethod, delayTime, transparentColorIndex, localColorTable, tableBasedImageData) {\r\n\t\tthis.writeGraphicControlExtension(\r\n\t\t\tdisposalMethod,\r\n\t\t\t0,\r\n\t\t\t+(transparentColorIndex !== undefined),\r\n\t\t\tdelayTime,\r\n\t\t\t(transparentColorIndex !== undefined) ? transparentColorIndex : 0\r\n\t\t);\r\n\r\n\t\t// Write Image Descriptor\r\n\t\tthis.writeImageDescriptor(\r\n\t\t\tleft,\r\n\t\t\ttop,\r\n\t\t\twidth,\r\n\t\t\theight,\r\n\t\t\t+!!localColorTable,\r\n\t\t\t0,\r\n\t\t\t0,\r\n\t\t\tlocalColorTable ? Math.log2(localColorTable.length / 3) - 1 : 0\r\n\t\t);\r\n\r\n\t\t// Write Local Color Table\r\n\t\tthis.writeColorTable(localColorTable);\r\n\r\n\t\t// Write Table Based Image Data\r\n\t\tthis.writeBytes(tableBasedImageData);\r\n\t}\r\n}\r\n"],"sourceRoot":"/source/"}